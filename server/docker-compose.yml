version: '3'

services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeperV1
    ports:
      - "2181:2181"
    restart: unless-stopped

  kafka:
    image: wurstmeister/kafka
    container_name: kafkaV1
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    restart: unless-stopped

  redis:
    image: redis
    container_name: redis
    ports:
      - "6379:6379"
    restart: unless-stopped

  postgresql:
    image: postgres
    container_name: postgresql
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: game_item_management
      POSTGRES_SCHEMA: game_server
      POSTGRES_HOST_AUTH_METHOD: "trust"
    ports:
      - "5432:5432"
    volumes:
      - ./init.sh:/docker-entrypoint-initdb.d/init.sh
      - ./init_schema.sql:/docker-entrypoint-initdb.d/init_schema.sql
      - ./create_database.sql:/docker-entrypoint-initdb.d/create_database.sql
    restart: unless-stopped

  nodejs_api:
    image: game_server_test
    container_name: nodejs_api
    ports:
      - "7000:7500"
    environment:
      KAFKA_HOST: kafka:9092
      REDIS_HOST: redis
      PG_DB_DIALECT: postgresql
      PG_DB_USERNAME: postgres
      PG_DB_PASSWORD: password
      PG_DB_DATABASE: game_item_management
      PG_DB_SCHEMA: game_server
    depends_on:
      - kafka
      - redis
      - postgresql
